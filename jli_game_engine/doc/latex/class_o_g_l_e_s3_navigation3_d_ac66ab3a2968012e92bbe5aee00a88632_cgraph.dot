digraph "OGLES3Navigation3D::InitApplication"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLES3Navigation3D\l::InitApplication",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="PVRTMat4::Identity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#aec7e6d87fc29ef245978cbeaeedf15d7",tooltip="Generates an identity matrix. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="CPVRTResourceFile::\lSetReadPath",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#a0e289bb7f281f32af4497d26753f577c",tooltip="Sets the read path. "];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="PVRShell::PVRShellGet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#ad58b00376cdae7a8aeea41fc17367bfd",tooltip="This function is used to get parameters from the PVRShell. It can be called from anywhere in the prog..."];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="CPVRTResourceFile::\lSetLoadReleaseFunctions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#a798c5394174550e8c18e3113c9485fce",tooltip="This function is used to override the CPVRTResource file loading functions. If you pass NULL in as th..."];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="OGLES3Navigation3D\l::Load3dModelIndex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_navigation3_d.html#a1415d966b29ede920c2f8ab3abd60809"];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="CPVRTResourceFile::\lIsOpen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#a484df820e9829438c0601bbc0aef7797",tooltip="Is the file open. "];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="CPVRTResourceFile::\lDataPtr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#af3da413665ad9e932ae95676f3605781",tooltip="Returns a pointer to the file data. If the data is expected to be a string don&#39;t assume that it is nu..."];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="PVRShell::PVRShellOutput\lDebug",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#a143d693b1c6e373b29485c1be51d1010",tooltip="Writes the resultant string to the debug output (e.g. using printf(), OutputDebugString(), ...). Check the SDK release notes for details on how the string is output. "];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="CPVRTString::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#aabd1f2848c4b1d65e7418b264502687d",tooltip="Returns a const char* pointer of the string. "];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="OGLES3Navigation3D\l::LoadOcclusionData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_navigation3_d.html#a94cc732192a236270fc54f0251b66d05"];
  Node11 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node11 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="CPVRTModelPOD::ReadFromFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#abe43b961eabe1c9db94545b97c84c71f",tooltip="Loads the specified \".POD\" file; returns the scene in pScene. This structure must later be destroyed ..."];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="CSourceStream::Init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_source_stream.html#ab0ebb0e543b50e391d1e73a8cf40162e"];
  Node13 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="PVRShell::PVRShellSet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#afe4052dde87d659948defdd63529eee6",tooltip="This function is used to pass preferences to the PVRShell. If used, this function must be called from..."];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="PVRTVec3::normalized",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#ac5c54e180c246587037d2f7fa2c4d12d",tooltip="returns a normalized vector of the same direction as this vector "];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="PVRTVec3::dot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#af9156c21175c3f3b04fb11295f336623",tooltip="calculate the scalar product of two PVRTVec3s "];
  Node15 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="PVRTVec3::length",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#aa2c1f573d504ea9ebe52d112cfd91222",tooltip="calculates the magnitude of the vector "];
}
