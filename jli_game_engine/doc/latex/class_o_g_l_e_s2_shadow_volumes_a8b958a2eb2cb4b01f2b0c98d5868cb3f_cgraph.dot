digraph "OGLES2ShadowVolumes::InitView"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLES2ShadowVolumes\l::InitView",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="OGLES2ShadowVolumes\l::LoadVbos",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shadow_volumes.html#a31c4d99434d3e5e679c80cde47f67918"];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="PVRTModelPODCountIndices",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_model_p_o_d_8h.html#a30211d755b5779ba7f85269a248b9254"];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="OGLES2ShadowVolumes\l::LoadTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shadow_volumes.html#a5bc1ed70daabc026d941b9172e0605e7"];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="PVRTTextureLoadFromPVR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s.html#ga6eecac4c871ba7ccdd0ef4b057a7d596",tooltip="Allows textures to be stored in binary PVR files and loaded in. Can load parts of a mipmaped texture ..."];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="PVRShell::PVRShellSet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#afe4052dde87d659948defdd63529eee6",tooltip="This function is used to pass preferences to the PVRShell. If used, this function must be called from..."];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="CPVRTString::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#aabd1f2848c4b1d65e7418b264502687d",tooltip="Returns a const char* pointer of the string. "];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="OGLES2ShadowVolumes\l::LoadShaders",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shadow_volumes.html#aecbc385c797da473d863cd26c64ec9df"];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="PVRTShaderLoadFromFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s2.html#ga568b6b49364c381f51f873e86d125138",tooltip="Loads a shader file into memory and passes it to the GL. It also passes defines that need to be pre-a..."];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="CPVRTResourceFile::\lIsOpen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#a484df820e9829438c0601bbc0aef7797",tooltip="Is the file open. "];
  Node9 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="PVRTShaderLoadBinaryFrom\lMemory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s2.html#gaeae857167097428a210514c0695a3ac7",tooltip="Takes a shader binary from memory and passes it to the GL. "];
  Node9 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="CPVRTResourceFile::\lDataPtr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#af3da413665ad9e932ae95676f3605781",tooltip="Returns a pointer to the file data. If the data is expected to be a string don&#39;t assume that it is nu..."];
  Node9 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="CPVRTResourceFile::Size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#adfd470f542fd27ee904966b116afd617",tooltip="Returns the size of the opened file. "];
  Node9 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="CPVRTString::assign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#ada0fed209f3ddcb45cde07eff41b718a",tooltip="Assigns the string to the string _Ptr. "];
  Node9 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node9 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="PVRTShaderLoadSourceFrom\lMemory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s2.html#ga01702688579886d94df09c62817fab6c",tooltip="Loads a shader source code into memory and compiles it. It also pre-appends the array of defines that..."];
  Node15 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node8 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="PVRTCreateProgram",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s2.html#ga47ba5cd4baf3d8541e222081b521d5c6",tooltip="Links a shader program. "];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="OGLES2ShadowVolumes\l::BuildShadowVolume",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shadow_volumes.html#acb41fbe23f37e4bc4f5ccc1a99b37b20"];
  Node17 -> Node18 [color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="PVRTShadowVolMeshCreateMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_shadow_vol_8h.html#a3f5f49826379f302d55a95d978d97419"];
  Node17 -> Node19 [color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="PVRTShadowVolMeshInitMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_shadow_vol_8h.html#a7e6158532160e8cb9768c897ab449f8c"];
  Node17 -> Node20 [color="midnightblue",fontsize="10",style="solid"];
  Node20 [label="PVRTShadowVolMeshInitVol",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_shadow_vol_8h.html#aeaf55b606d528adbbd2f71d0a71aed3f"];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid"];
  Node21 [label="OGLES2ShadowVolumes\l::BuildVolume",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shadow_volumes.html#ad0e46cb5fea1e30d89c14619dd71ca2f"];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid"];
  Node22 [label="PVRTMat4::RotationZ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a9ff7a65314d7c112229914abf6e703ed",tooltip="Calculates a matrix corresponding to a rotation of angle degrees about the Z axis. "];
  Node21 -> Node23 [color="midnightblue",fontsize="10",style="solid"];
  Node23 [label="CPVRTModelPOD::GetWorldMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a275eceb98a361d91d77e15b54238a8de",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid"];
  Node24 [label="CPVRTModelPOD::GetWorldMatrix\lNoCache",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a5d8930577009f9c922665522ca9bb1c3",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node24 -> Node25 [color="midnightblue",fontsize="10",style="solid"];
  Node25 [label="CPVRTModelPOD::GetTransformation\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#ab614a904956547c6cd7c623046f888b2",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node24 -> Node26 [color="midnightblue",fontsize="10",style="solid"];
  Node26 [label="CPVRTModelPOD::GetScaling\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#aaf982331192d8590949796dd61777c8a",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node24 -> Node27 [color="midnightblue",fontsize="10",style="solid"];
  Node27 [label="CPVRTModelPOD::GetRotation\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a021fd16d1c7d7f3e09ba1e133289d0e7",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node24 -> Node28 [color="midnightblue",fontsize="10",style="solid"];
  Node28 [label="CPVRTModelPOD::GetTranslation\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a5b9cdd65e3f36c6fe3c0a6937892d506",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node21 -> Node29 [color="midnightblue",fontsize="10",style="solid"];
  Node29 [label="PVRTMat4::inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a553c1f51db42d5fb3ef55557dfbad4e4",tooltip="Calculates multiplicative inverse of this matrix The matrix must be of the form : A 0 C 1 Where A is ..."];
  Node21 -> Node30 [color="midnightblue",fontsize="10",style="solid"];
  Node30 [label="PVRTShadowVolSilhouetteProjected\lBuild",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_shadow_vol_8h.html#a890b0876ff8a4d3898526672de9c3938"];
  Node1 -> Node31 [color="midnightblue",fontsize="10",style="solid"];
  Node31 [label="PVRShell::PVRShellGet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#ad58b00376cdae7a8aeea41fc17367bfd",tooltip="This function is used to get parameters from the PVRShell. It can be called from anywhere in the prog..."];
  Node1 -> Node32 [color="midnightblue",fontsize="10",style="solid"];
  Node32 [label="CPVRTPrint3D::SetTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#a83a1fbe0a34d14a6a0d206b1e555dda7",tooltip="Initialization and texture upload of default font data. Should be called only once for a Print3D obje..."];
  Node1 -> Node33 [color="midnightblue",fontsize="10",style="solid"];
  Node33 [label="CPVRTModelPOD::GetCameraPos",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a169b7cd0640846ee50a1ec7f1ba72550",tooltip="Calculate the position of the camera and its target. Uses animation data. If the queried camera does ..."];
  Node33 -> Node23 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node34 [color="midnightblue",fontsize="10",style="solid"];
  Node34 [label="PVRTMat4::LookAtRH",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a2c91f861b78d38e0f9ea3c6728a0b03a",tooltip="Create a look-at view matrix for a right hand coordinate system. "];
  Node34 -> Node35 [color="midnightblue",fontsize="10",style="solid"];
  Node35 [label="PVRTMat4::LookAt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a499e05ac090b56a6c9478b254d68cab5",tooltip="Create a look-at view matrix. "];
  Node35 -> Node36 [color="midnightblue",fontsize="10",style="solid"];
  Node36 [label="PVRTVec3::normalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#a18fbcf5025ed7c64bb00ba27f94302a4",tooltip="normalizes the vector "];
  Node36 -> Node37 [color="midnightblue",fontsize="10",style="solid"];
  Node37 [label="PVRTVec3::dot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#af9156c21175c3f3b04fb11295f336623",tooltip="calculate the scalar product of two PVRTVec3s "];
  Node36 -> Node38 [color="midnightblue",fontsize="10",style="solid"];
  Node38 [label="PVRTVec3::length",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#aa2c1f573d504ea9ebe52d112cfd91222",tooltip="calculates the magnitude of the vector "];
  Node35 -> Node39 [color="midnightblue",fontsize="10",style="solid"];
  Node39 [label="PVRTVec3::cross",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#ae5c0781b20ea9945ba92567e77782b92",tooltip="calculate the cross product of two PVRTVec3s "];
  Node35 -> Node40 [color="midnightblue",fontsize="10",style="solid"];
  Node40 [label="PVRTVec3::normalized",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#ac5c54e180c246587037d2f7fa2c4d12d",tooltip="returns a normalized vector of the same direction as this vector "];
  Node40 -> Node37 [color="midnightblue",fontsize="10",style="solid"];
  Node40 -> Node38 [color="midnightblue",fontsize="10",style="solid"];
  Node35 -> Node41 [color="midnightblue",fontsize="10",style="solid"];
  Node41 [label="PVRTMat4::postTranslate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a53a4cffcb0692d8c7d8bc180d8235a8d",tooltip="Alters the translation component of the transformation matrix. "];
  Node1 -> Node42 [color="midnightblue",fontsize="10",style="solid"];
  Node42 [label="PVRTMat4::PerspectiveFovRH",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a614e5b42b69d123e1969e33ad8ae0e81",tooltip="Create a perspective matrix for a right hand coordinate system. "];
  Node42 -> Node43 [color="midnightblue",fontsize="10",style="solid"];
  Node43 [label="PVRTMat4::PerspectiveFov",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a9e6ccece8c34673154a72f993d10529b",tooltip="Perspective calculation where field of view is used instead of near plane dimensions. "];
  Node43 -> Node44 [color="midnightblue",fontsize="10",style="solid"];
  Node44 [label="PVRTMat4::Perspective",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#af03e5074ed794e142237cd9452f0e054",tooltip="Create a perspective matrix. "];
  Node1 -> Node45 [color="midnightblue",fontsize="10",style="solid"];
  Node45 [label="PVRShell::PVRShellGetTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#a62b50b284b42c0f9e037855a14d64bfe",tooltip="The number itself should be considered meaningless; an application should use this function to determ..."];
}
