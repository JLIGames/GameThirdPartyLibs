digraph "OGLES3CubeShadowMapping::RenderScene"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLES3CubeShadowMapping\l::RenderScene",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="OGLES3CubeShadowMapping\l::Update",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_cube_shadow_mapping.html#ad2fee38498e5bcc85f00b6a5b281017c"];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="PVRShell::PVRShellIsKeyPressed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#a3771f847321dbc7aa5a9d8647c49b38b",tooltip="Check if a key was pressed. "];
  Node2 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="PVRShell::PVRShellGetTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#a62b50b284b42c0f9e037855a14d64bfe",tooltip="The number itself should be considered meaningless; an application should use this function to determ..."];
  Node2 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="CPVRTModelPOD::SetFrame",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a52258e72054fcc086efc2374648e141d",tooltip="Set the animation frame for which subsequent Get*() calls should return data. "];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="CPVRTModelPOD::GetLight",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#ae0cde5db69dc26398e815e28b4f33acf",tooltip="Calculate the position and direction of the given Light. Uses animation data. "];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="CPVRTModelPOD::GetWorldMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a275eceb98a361d91d77e15b54238a8de",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="CPVRTModelPOD::GetWorldMatrix\lNoCache",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a5d8930577009f9c922665522ca9bb1c3",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="CPVRTModelPOD::GetTransformation\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#ab614a904956547c6cd7c623046f888b2",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="CPVRTModelPOD::GetScaling\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#aaf982331192d8590949796dd61777c8a",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node8 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="CPVRTModelPOD::GetRotation\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a021fd16d1c7d7f3e09ba1e133289d0e7",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node8 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="CPVRTModelPOD::GetTranslation\lMatrix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#a5b9cdd65e3f36c6fe3c0a6937892d506",tooltip="Generates the world matrix for the given Mesh Instance; applies the parent&#39;s transform too..."];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="OGLES3CubeShadowMapping\l::RenderSceneWithEffect",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_cube_shadow_mapping.html#a73663c9008ff01f8852905b5ac0ea711"];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="CPVRTPFXEffect::Activate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#a66c1e23696dd3c0acda2becdac348c69",tooltip="Selects the gl program object and binds the textures. If the render target texture for the current re..."];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="CPVRTArray::GetSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html#a7f441650618876cd84adaad282a83ac1",tooltip="Gives current size of array/number of elements. "];
  Node13 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="CPVRTString::substitute",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#afaca43fa31548dcae05b2cba65406379",tooltip="Erases a portion of the string. "];
  Node13 -> Node17 [color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="CPVRTMap::Exists",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$singleton_c_p_v_r_t_map.html#ae0f21eef4c5f71a21a57e352a31f9b75",tooltip="Checks whether or not data exists for the specified key. "];
  Node13 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node13 -> Node18 [color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="CPVRTPFXEffect::GetUniform\lArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#ab9f4ce64c4bd31eb5fb45d86f4239bed",tooltip="Returns a list of known semantics. "];
  Node13 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node13 -> Node19 [color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="PVRTMat4::inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a553c1f51db42d5fb3ef55557dfbad4e4",tooltip="Calculates multiplicative inverse of this matrix The matrix must be of the form : A 0 C 1 Where A is ..."];
  Node13 -> Node20 [color="midnightblue",fontsize="10",style="solid"];
  Node20 [label="PVRTMat4::transpose",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#aca32d6ac4e141e825aba1ceead3b3a64",tooltip="Calculates transpose of this matrix. "];
  Node13 -> Node21 [color="midnightblue",fontsize="10",style="solid"];
  Node21 [label="PVRTVec3::ptr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html#a9a19fb9bc354e97e35e08b1af7cc55ee",tooltip="returns a pointer to memory containing the values of the PVRTVec3 "];
  Node1 -> Node22 [color="midnightblue",fontsize="10",style="solid"];
  Node22 [label="PVRShell::PVRShellGet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#ad58b00376cdae7a8aeea41fc17367bfd",tooltip="This function is used to get parameters from the PVRShell. It can be called from anywhere in the prog..."];
  Node1 -> Node23 [color="midnightblue",fontsize="10",style="solid"];
  Node23 [label="CPVRTModelPOD::GetCamera",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html#aa96ff6f192ed302b0f0b5461c2b266d9",tooltip="Calculate the From, To and Up vectors for the given camera. Uses animation data. Note that even if th..."];
  Node23 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node24 [color="midnightblue",fontsize="10",style="solid"];
  Node24 [label="CPVRTPrint3D::DisplayDefault\lTitle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#a2bccb1ef64d69a433696094987799d79",tooltip="Creates a default title with predefined position and colours. It displays as well company logos when ..."];
  Node24 -> Node25 [color="midnightblue",fontsize="10",style="solid"];
  Node25 [label="CPVRTPrint3D::Print3D",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#afd98a5ba4e3f9183ceb615566a64f843",tooltip="Display 3D text on screen. CPVRTPrint3D::SetTextures(...) must have been called beforehand. This function accepts formatting in the printf way. "];
  Node25 -> Node26 [color="midnightblue",fontsize="10",style="solid"];
  Node26 [label="CPVRTArray::Clear",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html#ad1e3c37b05d484c9e5598899d6611440",tooltip="Clears the array. "];
  Node25 -> Node27 [color="midnightblue",fontsize="10",style="solid"];
  Node27 [label="PVRTUnicodeUTF8ToUTF32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_unicode_8h.html#a54150f433be76ed547efa36329d48341",tooltip="Decodes a UTF8-encoded string in to Unicode code points (UTF32). If pUTF8 is not null terminated..."];
  Node27 -> Node28 [color="midnightblue",fontsize="10",style="solid"];
  Node28 [label="CPVRTArray::Append",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html#a1af5aeb05badf2783dbc7ec5b98cead2",tooltip="Appends an element to the end of the array, expanding it if necessary. "];
  Node1 -> Node29 [color="midnightblue",fontsize="10",style="solid"];
  Node29 [label="CPVRTPrint3D::Flush",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#ad7d1d707351cc84ec0614487e4acc6b1",tooltip="Flushes all the print text commands. "];
}
