digraph "OGLES3UniformBufferObjects::LoadPFX"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLES3UniformBufferObjects\l::LoadPFX",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="CPVRTPFXParser::ParseFromFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ae1a2dba178d9960729d6c5a04255370f",tooltip="Reads the PFX file and calls the parser. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="CPVRTResourceFile::\lIsOpen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#a484df820e9829438c0601bbc0aef7797",tooltip="Is the file open. "];
  Node2 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="CPVRTResourceFile::\lDataPtr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#af3da413665ad9e932ae95676f3605781",tooltip="Returns a pointer to the file data. If the data is expected to be a string don&#39;t assume that it is nu..."];
  Node2 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="CPVRTResourceFile::Size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#adfd470f542fd27ee904966b116afd617",tooltip="Returns the size of the opened file. "];
  Node2 -> Node6 [color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="CPVRTString::assign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#ada0fed209f3ddcb45cde07eff41b718a",tooltip="Assigns the string to the string _Ptr. "];
  Node2 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="CPVRTString::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#aabd1f2848c4b1d65e7418b264502687d",tooltip="Returns a const char* pointer of the string. "];
  Node2 -> Node8 [color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="CPVRTPFXParser::ParseFrom\lMemory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#a99116781faf9aa20d7696ff768a8c640",tooltip="Parses a PFX script from memory. "];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="PVRTStringFromFormattedStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_string_8h.html#ac71767fc5f1a47c1a4c4b312cac29488"];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="PVRShell::PVRShellSet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#afe4052dde87d659948defdd63529eee6",tooltip="This function is used to pass preferences to the PVRShell. If used, this function must be called from..."];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="CPVRTPFXParser::GetNumber\lEffects",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ae0e3acfc196a8186c12be71c109818c6",tooltip="Returns the number of effects referenced in the PFX. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="CPVRTArray::GetSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html#a7f441650618876cd84adaad282a83ac1",tooltip="Gives current size of array/number of elements. "];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="CPVRTPFXParser::GetEffect",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ac47b42eff3d3acfa04fa75a9dd0e0a73",tooltip="Returns a given effect. "];
  Node13 -> Node11 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="CPVRTStringHash::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html#a4c9b83759bcb1cc6d6aff16ab1624f39",tooltip="Returns the base string as a const char*. "];
  Node14 -> Node7 [color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="CPVRTStringHash::String",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html#ab3b3b774c1cd426c81f0fe26d44a5246",tooltip="Returns the original, base string. "];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="CPVRTPFXEffect::GetProgram\lHandle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#a69ced662214587ef4bef6d7d24a5f4d5",tooltip="Returns the OGL program handle. "];
}
