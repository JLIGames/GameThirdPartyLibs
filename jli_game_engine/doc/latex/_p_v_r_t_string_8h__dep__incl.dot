digraph "PVR/SDK_3.4/Tools/PVRTString.h"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="PVR/SDK_3.4/Tools/PVRTString.h",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="PVR/SDK_3.4/Tools/PVRTHash.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_hash_8h.html",tooltip="A simple hash class which uses TEA to hash a string or given data into a 32-bit unsigned int..."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="PVR/SDK_3.4/Tools/OGLES\l/OGLESTools.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_o_g_l_e_s_tools_8h.html",tooltip="Header file of OGLESTools.lib. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="PVR/SDK_3.4/Examples\l/Advanced/Particles/OGLES\l/Particle.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_2_s_d_k__3_84_2_examples_2_advanced_2_particles_2_o_g_l_e_s_2particle_8h_source.html"];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="PVR/SDK_3.4/Tools/PVRTString\lHash.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_string_hash_8h.html",tooltip="Inherits from PVRTString to include PVRTHash functionality for quick string compares. "];
  Node5 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="PVR/SDK_3.4/Tools/OGLES2\l/OGLES2Tools.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_o_g_l_e_s2_tools_8h.html",tooltip="Header file of OGLES2Tools.lib. "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="PVR/SDK_3.4/Examples\l/Advanced/ParticleSystem\l/OGLES2/ParticleSystemCPU.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_particle_system_c_p_u_8h_source.html"];
  Node5 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="PVR/SDK_3.4/Tools/PVRTPFXParser.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_p_f_x_parser_8h.html",tooltip="Declaration of PFX file parser. "];
  Node8 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="PVR/SDK_3.4/Tools/OGLES3\l/OGLES3Tools.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_o_g_l_e_s3_tools_8h.html",tooltip="Header file of OGLES3Tools.lib. "];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="PVR/SDK_3.4/Tools/OGLES3\l/OGLES31Tools.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_o_g_l_e_s31_tools_8h.html",tooltip="Header file of OGLES3Tools.lib. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="PVR/SDK_3.4/Examples\l/Advanced/GameOfLife\l/OGLES3/GameOfLife.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_game_of_life_8h_source.html"];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="PVR/SDK_3.4/Examples\l/Advanced/ParticleSystem\l/OGLES3/ParticleSystemGPU.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_particle_system_g_p_u_8h_source.html"];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="PVR/SDK_3.4/Examples\l/Advanced/ProceduralTextures\l/OGLES3/ProceduralTextures.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_procedural_textures_8h_source.html"];
  Node10 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="PVR/SDK_3.4/Examples\l/Intermediate/ImageConvolution\l/OGLES3/CSImageConvolution.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_c_s_image_convolution_8h_source.html"];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="PVR/SDK_3.4/Tools/PVRTSkip\lGraph.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_skip_graph_8h.html",tooltip="A \"tree-like\" structure for storing data which, unlike a tree, can reference any other node..."];
  Node15 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="PVR/SDK_3.4/Tools/PVRTBackground.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_background_8h.html",tooltip="Function to draw a background texture. "];
  Node16 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="PVR/SDK_3.4/Tools/PVRTResource\lFile.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_resource_file_8h.html",tooltip="Simple resource file wrapper. "];
  Node17 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="PVR/SDK_3.4/Tools/OGLES2\l/PVRTShader.h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_shader_8h.html",tooltip="Shader handling for OpenGL ES 2.0. "];
  Node18 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node18 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
