digraph "CPVRTPFXEffect"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="CPVRTPFXEffect",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Uniforms" ];
  Node2 [label="CPVRTArray\< SPVRTPFXUniform \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_pArray" ];
  Node3 [label="SPVRTPFXUniform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_v_r_t_p_f_x_uniform.html",tooltip="A struct containing GL uniform data. "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sValueName" ];
  Node4 [label="CPVRTString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html",tooltip="A string class. "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_pParser" ];
  Node5 [label="CPVRTPFXParser",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html",tooltip="PFX parser. "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_psContext" ];
  Node6 [label="SPVRTContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_v_r_t_context.html",tooltip="A structure for storing API specific variables. "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pglesExt" ];
  Node7 [label="CPVRTglesExt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_tgles_ext.html",tooltip="A class for initialising and managing OGLES extensions. "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" glMapBufferOES" ];
  Node8 [label="access",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structaccess.html"];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" list" ];
  Node9 [label="point",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structpoint.html"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Textures" ];
  Node10 [label="CPVRTArray\< SPVRTPFXTexture \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html"];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_pArray" ];
  Node11 [label="SPVRTPFXTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_v_r_t_p_f_x_texture.html",tooltip="A texture data array. "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ];
  Node12 [label="CPVRTStringHash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html",tooltip="Inherits from PVRTString to include PVRTHash functionality for quick string compares. "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Semantics" ];
  Node13 [label="CPVRTArray\< SPVRTPFXUniform\lSemantic \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html"];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_pArray" ];
  Node14 [label="SPVRTPFXUniformSemantic",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_v_r_t_p_f_x_uniform_semantic.html",tooltip="Struct to convert a semantic string to a number. "];
}
