digraph "OGLESFur"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLESFur",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="PVRShell",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html",tooltip="Inherited by the application; responsible for abstracting the OS and API. "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Scene" ];
  Node3 [label="CPVRTModelPOD",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_model_p_o_d.html",tooltip="A class for loading and storing data from POD files/headers. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="SPODScene",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_scene.html",tooltip="Struct for storing POD scene data. "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pLight" ];
  Node5 [label="SPODLight",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_light.html",tooltip="Struct for storing POD light data. "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eType" ];
  Node6 [label="EPODLightType",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_e_p_o_d_light_type.html",tooltip="Enum for the POD format light types. "];
  Node7 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pMaterial" ];
  Node7 [label="SPODMaterial",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_material.html",tooltip="Struct for storing POD material data. "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eBlendOpRGB\neBlendOpA" ];
  Node8 [label="EPODBlendOp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_e_p_o_d_blend_op.html",tooltip="Enum for the POD format blend operation. "];
  Node9 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eBlendSrcA\neBlendSrcRGB\neBlendDstRGB\neBlendDstA" ];
  Node9 [label="EPODBlendFunc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_e_p_o_d_blend_func.html",tooltip="Enum for the POD format blend functions. "];
  Node10 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pMesh" ];
  Node10 [label="SPODMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_mesh.html",tooltip="Struct for storing POD mesh data. "];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sBoneBatches" ];
  Node11 [label="CPVRTBoneBatches",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_bone_batches.html",tooltip="A class for processing vertices into bone batches. "];
  Node12 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mUnpackMatrix" ];
  Node12 [label="PVRTMATRIXf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_t_m_a_t_r_i_xf.html",tooltip="4x4 floating point matrix "];
  Node13 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sBoneIdx\nsTangents\nsFaces\nsVertex\nsBinormals\nsBoneWeight\nsVtxColours\npsUVW\nsNormals" ];
  Node13 [label="CPODData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_o_d_data.html",tooltip="A class for representing POD data. "];
  Node14 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ePrimitiveType" ];
  Node14 [label="EPODPrimitiveType",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_e_p_o_d_primitive_type.html",tooltip="Enum for the POD format primitive types. "];
  Node15 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pCamera" ];
  Node15 [label="SPODCamera",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_camera.html",tooltip="Struct for storing POD camera data. "];
  Node16 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pNode" ];
  Node16 [label="SPODNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_node.html",tooltip="Struct for storing POD node data. "];
  Node17 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pTexture" ];
  Node17 [label="SPODTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_p_o_d_texture.html",tooltip="Struct for storing POD texture data. "];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Print3D" ];
  Node18 [label="CPVRTPrint3D",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html",tooltip="Display text/logos on the screen. "];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_pvPlaneWater\nm_pvPlaneCloud" ];
  Node19 [label="SVertex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_s_vertex.html"];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" vPosition\nt" ];
  Node20 [label="PVRTVec2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec2.html",tooltip="2 component vector "];
  Node21 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fNormal\nn\np\nfPos" ];
  Node21 [label="PVRTVec3",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec3.html",tooltip="3 component vector "];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node22 [label="PVRTVECTOR3",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_v_e_c_t_o_r3f.html",tooltip="3D floating point vector "];
  Node23 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" c" ];
  Node23 [label="PVRTVec4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_vec4.html",tooltip="4 component vector "];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node24 [label="PVRTVECTOR4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_v_e_c_t_o_r4f.html",tooltip="4D floating point vector "];
  Node25 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_mProj\nm_mView\nm_mDuckWorld" ];
  Node25 [label="PVRTMat4",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html",tooltip="4x4 Matrix "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node26 [label="PVRTMATRIX",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_t_m_a_t_r_i_xf.html",tooltip="4x4 floating point matrix "];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_vCamFrom\nm_vCamTo" ];
}
