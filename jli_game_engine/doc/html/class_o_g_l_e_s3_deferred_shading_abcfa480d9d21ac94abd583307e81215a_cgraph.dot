digraph "OGLES3DeferredShading::InitView"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLES3DeferredShading\l::InitView",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="PVRShell::PVRShellOutput\lDebug",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#a143d693b1c6e373b29485c1be51d1010",tooltip="Writes the resultant string to the debug output (e.g. using printf(), OutputDebugString(), ...). Check the SDK release notes for details on how the string is output. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="PVRShell::PVRShellGet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#ad58b00376cdae7a8aeea41fc17367bfd",tooltip="This function is used to get parameters from the PVRShell. It can be called from anywhere in the prog..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="PVRTGetPOTLower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_misc_8h.html#a4e9c002212fab646dc54d2431646d15e",tooltip="When iTimesLower is one, this function will return the closest power-of-two value below the base valu..."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="PVRTGetPOTHigher",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_misc_8h.html#aba48dae67b986ff35ccf29867d6fc96d",tooltip="When iTimesHigher is one, this function will return the closest power-of-two value above the base val..."];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="OGLES3DeferredShading\l::LoadTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_deferred_shading.html#a68023121473d6250f56c813dac5d0204"];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="PVRTTextureLoadFromPVR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s.html#ga6eecac4c871ba7ccdd0ef4b057a7d596",tooltip="Allows textures to be stored in binary PVR files and loaded in. Can load parts of a mipmaped texture ..."];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="PVRShell::PVRShellSet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#afe4052dde87d659948defdd63529eee6",tooltip="This function is used to pass preferences to the PVRShell. If used, this function must be called from..."];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="CPVRTString::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#aabd1f2848c4b1d65e7418b264502687d",tooltip="Returns a const char* pointer of the string. "];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="OGLES3DeferredShading\l::LoadVbos",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_deferred_shading.html#a8765d72b99164cb7a3bbdc8efa4a9e9b"];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="PVRTModelPODCountIndices",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_model_p_o_d_8h.html#a30211d755b5779ba7f85269a248b9254"];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="OGLES3DeferredShading\l::LoadPFX",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_deferred_shading.html#ad689392f309130d83fc6150abf02e9e0"];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CPVRTPFXParser::ParseFromFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ae1a2dba178d9960729d6c5a04255370f",tooltip="Reads the PFX file and calls the parser. "];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="CPVRTResourceFile::\lIsOpen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#a484df820e9829438c0601bbc0aef7797",tooltip="Is the file open. "];
  Node13 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="CPVRTResourceFile::\lDataPtr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#af3da413665ad9e932ae95676f3605781",tooltip="Returns a pointer to the file data. If the data is expected to be a string don&#39;t assume that it is nu..."];
  Node13 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="CPVRTResourceFile::Size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_resource_file.html#adfd470f542fd27ee904966b116afd617",tooltip="Returns the size of the opened file. "];
  Node13 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CPVRTString::assign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#ada0fed209f3ddcb45cde07eff41b718a",tooltip="Assigns the string to the string _Ptr. "];
  Node13 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="CPVRTPFXParser::ParseFrom\lMemory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#a99116781faf9aa20d7696ff768a8c640",tooltip="Parses a PFX script from memory. "];
  Node18 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="PVRTStringFromFormattedStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_string_8h.html#ac71767fc5f1a47c1a4c4b312cac29488"];
  Node12 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="CPVRTPFXParser::GetNumber\lEffects",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ae0e3acfc196a8186c12be71c109818c6",tooltip="Returns the number of effects referenced in the PFX. "];
  Node20 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="CPVRTArray::GetSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html#a7f441650618876cd84adaad282a83ac1",tooltip="Gives current size of array/number of elements. "];
  Node12 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="CPVRTPFXParser::GetEffect",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ac47b42eff3d3acfa04fa75a9dd0e0a73",tooltip="Returns a given effect. "];
  Node22 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="CPVRTStringHash::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html#a4c9b83759bcb1cc6d6aff16ab1624f39",tooltip="Returns the base string as a const char*. "];
  Node23 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="CPVRTStringHash::String",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html#ab3b3b774c1cd426c81f0fe26d44a5246",tooltip="Returns the original, base string. "];
  Node12 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="CPVRTPFXEffect::Activate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#a66c1e23696dd3c0acda2becdac348c69",tooltip="Selects the gl program object and binds the textures. If the render target texture for the current re..."];
  Node25 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="CPVRTPFXEffect::GetUniform\lArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#ab9f4ce64c4bd31eb5fb45d86f4239bed",tooltip="Returns a list of known semantics. "];
  Node12 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="OGLES3DeferredShading\l::AllocateGBuffer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s3_deferred_shading.html#a875c0099681d4f62cbde00084a878047"];
  Node1 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="CPVRTPrint3D::SetTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#a83a1fbe0a34d14a6a0d206b1e555dda7",tooltip="Initialization and texture upload of default font data. Should be called only once for a Print3D obje..."];
}
