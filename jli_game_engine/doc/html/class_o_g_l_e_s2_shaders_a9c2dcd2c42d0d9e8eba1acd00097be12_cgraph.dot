digraph "OGLES2Shaders::InitView"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="OGLES2Shaders::InitView",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="PVRShell::PVRShellGet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#ad58b00376cdae7a8aeea41fc17367bfd",tooltip="This function is used to get parameters from the PVRShell. It can be called from anywhere in the prog..."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CPVRTPrint3D::SetTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#a83a1fbe0a34d14a6a0d206b1e555dda7",tooltip="Initialization and texture upload of default font data. Should be called only once for a Print3D obje..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="PVRShell::PVRShellOutput\lDebug",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#a143d693b1c6e373b29485c1be51d1010",tooltip="Writes the resultant string to the debug output (e.g. using printf(), OutputDebugString(), ...). Check the SDK release notes for details on how the string is output. "];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="PVRTMat4::PerspectiveFovRH",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a614e5b42b69d123e1969e33ad8ae0e81",tooltip="Create a perspective matrix for a right hand coordinate system. "];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="PVRTMat4::PerspectiveFov",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#a9e6ccece8c34673154a72f993d10529b",tooltip="Perspective calculation where field of view is used instead of near plane dimensions. "];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="PVRTMat4::Perspective",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#af03e5074ed794e142237cd9452f0e054",tooltip="Create a perspective matrix. "];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="PVRTMat4::Identity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_p_v_r_t_mat4.html#aec7e6d87fc29ef245978cbeaeedf15d7",tooltip="Generates an identity matrix. "];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="PVRTTextureLoadFromPVR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___a_p_i___o_g_l_e_s.html#ga6eecac4c871ba7ccdd0ef4b057a7d596",tooltip="Allows textures to be stored in binary PVR files and loaded in. Can load parts of a mipmaped texture ..."];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="PVRShell::PVRShellSet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_p_v_r_shell.html#afe4052dde87d659948defdd63529eee6",tooltip="This function is used to pass preferences to the PVRShell. If used, this function must be called from..."];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CPVRTString::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#aabd1f2848c4b1d65e7418b264502687d",tooltip="Returns a const char* pointer of the string. "];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="OGLES2Shaders::FreeMemory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shaders.html#ad943f9badd6d1be02f3f330bb501fbca"];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CPVRTPFXEffect::GetTexture\lArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#a7aa24a05385a6cc26a33d3ab5bea27d7",tooltip="Gets the texture data array. "];
  Node12 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="CPVRTArray::GetSize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_array.html#a7f441650618876cd84adaad282a83ac1",tooltip="Gives current size of array/number of elements. "];
  Node12 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="CPVRTPrint3D::ReleaseTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_print3_d.html#a951bd6afe2007f942eca8474cd0025e3",tooltip="Deallocate the memory allocated in SetTextures(...) "];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="PVRTStringFromFormattedStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_p_v_r_t_string_8h.html#ac71767fc5f1a47c1a4c4b312cac29488"];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CPVRTString::empty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string.html#ad840a73b6d6ace02ca50d14680f38439",tooltip="Returns true if the string is empty. "];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="CPVRTPFXParser::FindTexture\lByName",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#a4ff1bd4beec702c2ea21500bdb9db9bf",tooltip="Returns the index of the given texture. Returns -1 on failure. "];
  Node18 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="CPVRTStringHash::Hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html#af7c991da6bbffdf4381683897469cc74",tooltip="Returns the hash of the base string. "];
  Node18 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="CPVRTPFXParser::GetNumber\lTextures",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ad26d3f66a6e6b4108b29a6c7d514598a",tooltip="Returns the number of textures referenced in the PFX. "];
  Node20 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="CPVRTPFXParser::GetTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#a71ba1aa445a178b276979dcd45fa9037",tooltip="Returns a given texture. "];
  Node21 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="CPVRTPFXEffect::SetTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_effect.html#a2c856bbaad1a9f8655eb0d46b60a7eb9",tooltip="Sets the textrue and applys the filtering. "];
  Node22 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="CPVRTPFXParser::GetEffect",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ac47b42eff3d3acfa04fa75a9dd0e0a73",tooltip="Returns a given effect. "];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="CPVRTPFXParser::GetNumber\lEffects",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ae0e3acfc196a8186c12be71c109818c6",tooltip="Returns the number of effects referenced in the PFX. "];
  Node24 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="CPVRTPFXParser::FindTexture\lIndex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_p_f_x_parser.html#ab0cd310eac907396412ef7989079705a",tooltip="Returns the index in to the texture array within the effect block where the given texture resides..."];
  Node25 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="CPVRTStringHash::c_str",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_p_v_r_t_string_hash.html#a4c9b83759bcb1cc6d6aff16ab1624f39",tooltip="Returns the base string as a const char*. "];
  Node26 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="OGLES2Shaders::ComputeSurface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_o_g_l_e_s2_shaders.html#a4f98c86e086e4b27e29d4977f35f10b0"];
}
