digraph "CharacterDemo"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="CharacterDemo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="GlutDemoApplication",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_collisionConfiguration" ,fontname="Helvetica"];
  Node3 [label="btDefaultCollisionConfiguration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_default_collision_configuration.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="btCollisionConfiguration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_collision_configuration.html"];
  Node5 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_collisionAlgorithmPool\nm_persistentManifoldPool" ,fontname="Helvetica"];
  Node5 [label="btPoolAllocator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_pool_allocator.html",tooltip="The btPoolAllocator class allows to efficiently allocate a large pool of objects, instead of dynamica..."];
  Node6 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_pdSolver" ,fontname="Helvetica"];
  Node6 [label="btConvexPenetrationDepth\lSolver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_convex_penetration_depth_solver.html",tooltip="ConvexPenetrationDepthSolver provides an interface for penetration depth calculation. "];
  Node7 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_boxSphereCF\nm_compoundCreateFunc\nm_swappedConvexConcaveCreate\lFunc\nm_sphereTriangleCF\nm_emptyCreateFunc\nm_boxBoxCF\nm_compoundCompoundCreate\lFunc\nm_planeConvexCF\nm_sphereSphereCF\nm_swappedCompoundCreate\lFunc\n..." ,fontname="Helvetica"];
  Node7 [label="btCollisionAlgorithmCreateFunc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structbt_collision_algorithm_create_func.html",tooltip="Used by the btCollisionDispatcher to register and create instances for btCollisionAlgorithm. "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_dispatcher" ,fontname="Helvetica"];
  Node8 [label="btCollisionDispatcher",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_collision_dispatcher.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="btDispatcher",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_dispatcher.html"];
  Node4 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_collisionConfiguration" ,fontname="Helvetica"];
  Node5 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_collisionAlgorithmPool\lAllocator\nm_persistentManifoldPool\lAllocator" ,fontname="Helvetica"];
  Node8 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_nearCallback" ,fontname="Helvetica"];
  Node7 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_doubleDispatch" ,fontname="Helvetica"];
  Node10 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_defaultManifoldResult" ,fontname="Helvetica"];
  Node10 [label="btManifoldResult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_manifold_result.html",tooltip="btManifoldResult is a helper class to manage contact results. "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="btDiscreteCollisionDetector\lInterface::Result",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structbt_discrete_collision_detector_interface_1_1_result.html"];
  Node12 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_body0Wrap\nm_body1Wrap" ,fontname="Helvetica"];
  Node12 [label="btCollisionObjectWrapper",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structbt_collision_object_wrapper.html"];
  Node12 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_parent" ,fontname="Helvetica"];
  Node13 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_manifoldsPtr" ,fontname="Helvetica"];
  Node13 [label="btAlignedObjectArray\l\< btPersistentManifold * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_aligned_object_array.html"];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ghostObject" ,fontname="Helvetica"];
  Node14 [label="btPairCachingGhostObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_pair_caching_ghost_object.html"];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="btGhostObject",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_overlappingPairCache" ,fontname="Helvetica"];
  Node16 [label="btBroadphaseInterface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_broadphase_interface.html"];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_collisionShapes" ,fontname="Helvetica"];
  Node17 [label="btAlignedObjectArray\l\< btCollisionShape * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_aligned_object_array.html"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_constraintSolver" ,fontname="Helvetica"];
  Node18 [label="btConstraintSolver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_constraint_solver.html"];
}
