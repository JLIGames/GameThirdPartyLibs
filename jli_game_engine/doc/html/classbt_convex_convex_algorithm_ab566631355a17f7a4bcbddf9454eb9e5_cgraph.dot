digraph "btConvexConvexAlgorithm::processCollision"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="btConvexConvexAlgorithm\l::processCollision",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="btManifoldResult::addContact\lPoint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_manifold_result.html#aebe32f0c202d988d0458e88d768602c6"];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="btManifoldResult::calculate\lCombinedFriction",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_manifold_result.html#a162717dce3ef3a756ae55ec04a179ed5",tooltip="User can override this material combiner by implementing gContactAddedCallback and setting body0->m_c..."];
  Node2 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="btManifoldResult::calculate\lCombinedRestitution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_manifold_result.html#aa4419fc3b0d13ccc2cbfd7739b047c04",tooltip="in the future we can let the user override the methods to combine restitution and friction ..."];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="btGjkPairDetector::\lsetIgnoreMargin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbt_gjk_pair_detector.html#a93e9752920c57c39faca247fc005750e",tooltip="don&#39;t use setIgnoreMargin, it&#39;s for Bullet&#39;s internal use "];
}
